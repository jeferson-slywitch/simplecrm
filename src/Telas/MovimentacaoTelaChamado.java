/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import classes.Combo;
import classes.ConexaoPostgresql;
import classes.Funcoes;
import classes.TextDocument;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *    This file is part of Foobar.
 *
 *   Foobar is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   Foobar is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
 *
 *   Este arquivo é parte do programa Foobar
 *
 *   Foobar é um software livre; você pode redistribuí-lo e/ou 
 *   modificá-lo dentro dos termos da Licença Pública Geral GNU como 
 *   publicada pela Fundação do Software Livre (FSF); na versão 3 da 
 *   Licença, ou (na sua opinião) qualquer versão.
 *
 *   Este programa é distribuído na esperança de que possa ser  útil, 
 *   mas SEM NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO
 *   a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a
 *   Licença Pública Geral GNU para maiores detalhes.
 *
 *   Você deve ter recebido uma cópia da Licença Pública Geral GNU junto
 *   com este programa, Se não, veja <http://www.gnu.org/licenses/>.
 *
 * 
 * @author Jeferson Slywitch - jeferson.slywitch@gmail.com
 */
public class MovimentacaoTelaChamado extends javax.swing.JInternalFrame {

    private ConexaoPostgresql Conexao;  
    private Funcoes Fun;    
    private TextDocument TD;
    
    
    String Codigo;
    String CodigoAndamento;
    
    /**
     * Creates new form MovimentacaoTelaChamado
     */
    public MovimentacaoTelaChamado() {
        initComponents();
        Limpar();
        Chamado();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbtNovo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jlbChaveProblema = new javax.swing.JLabel();
        jtfNumChamado = new javax.swing.JFormattedTextField();
        jtfCodigoFuncionario = new javax.swing.JFormattedTextField();
        jtfNomeFuncionario = new javax.swing.JFormattedTextField();
        jtfTituloProblema = new javax.swing.JFormattedTextField();
        jtfCodigoChave = new javax.swing.JFormattedTextField();
        jtfNomeChave = new javax.swing.JFormattedTextField();
        jbtPesquisar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtpDetalheProblema = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableAndamento = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtaAndamento = new javax.swing.JTextArea();
        jbtNovo2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtpSolucaoChamado = new javax.swing.JTextPane();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jdcDataFinal = new com.toedter.calendar.JDateChooser();
        jbtFinalizar = new javax.swing.JButton();
        jcbStatus = new javax.swing.JComboBox<>();
        jdcData = new com.toedter.calendar.JDateChooser();
        jbtRefresh = new javax.swing.JButton();
        jcbData = new javax.swing.JCheckBox();
        jcbStatusChamado = new javax.swing.JCheckBox();

        setClosable(true);
        setTitle("Chamado(s)");
        setToolTipText("");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Chamado", "Data", "Funcionário", "Problema", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(400);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Novo.png"))); // NOI18N
        jbtNovo.setText("Novo");
        jbtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });

        jLabel1.setText("Chamado");

        jLabel2.setText("Funcionário (F12)");

        jLabel4.setText("Título do Problema");

        jlbChaveProblema.setText("Palavra Chave do Problema (F12)");

        jtfCodigoFuncionario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoFuncionarioFocusLost(evt);
            }
        });
        jtfCodigoFuncionario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoFuncionarioKeyPressed(evt);
            }
        });

        jtfNomeFuncionario.setEnabled(false);
        jtfNomeFuncionario.setSelectionColor(new java.awt.Color(0, 0, 0));

        jbtPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Pesquisa.png"))); // NOI18N
        jbtPesquisar.setText("Pesquisar");
        jbtPesquisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtPesquisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPesquisarActionPerformed(evt);
            }
        });

        jtpDetalheProblema.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtpDetalheProblema.setEnabled(false);
        jScrollPane2.setViewportView(jtpDetalheProblema);

        jTabbedPane1.addTab("Detalhes do Problema", jScrollPane2);

        jTableAndamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº", "Data", "Título"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAndamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAndamentoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableAndamento);
        if (jTableAndamento.getColumnModel().getColumnCount() > 0) {
            jTableAndamento.getColumnModel().getColumn(0).setResizable(false);
            jTableAndamento.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTableAndamento.getColumnModel().getColumn(1).setResizable(false);
            jTableAndamento.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTableAndamento.getColumnModel().getColumn(2).setResizable(false);
            jTableAndamento.getColumnModel().getColumn(2).setPreferredWidth(300);
        }

        jtaAndamento.setColumns(20);
        jtaAndamento.setLineWrap(true);
        jtaAndamento.setRows(5);
        jtaAndamento.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        jtaAndamento.setEnabled(false);
        jScrollPane5.setViewportView(jtaAndamento);

        jbtNovo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Novo.png"))); // NOI18N
        jbtNovo2.setText("Novo");
        jbtNovo2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtNovo2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtNovo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovo2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtNovo2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtNovo2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Andamento", jPanel1);

        jtpSolucaoChamado.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtpSolucaoChamado.setEnabled(false);
        jScrollPane3.setViewportView(jtpSolucaoChamado);

        jLabel6.setText("Data da Finalização do Chamado");

        jLabel7.setText("Solução Apresentada para este Chamado");

        jdcDataFinal.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jdcDataFinal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 679, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jdcDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Finalização", jPanel2);

        jbtFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Crystal_Clear_action_apply (Custom).png"))); // NOI18N
        jbtFinalizar.setText("Finalizar");
        jbtFinalizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtFinalizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtFinalizarActionPerformed(evt);
            }
        });

        jcbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jbtRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Refresh2.png"))); // NOI18N
        jbtRefresh.setText("Atualizar");
        jbtRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtRefresh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRefreshActionPerformed(evt);
            }
        });

        jcbData.setText("Data");

        jcbStatusChamado.setText("Status Chamado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfNumChamado, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jdcData, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jcbData))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jtfCodigoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jtfNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jcbStatusChamado)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(289, 289, 289)
                                        .addComponent(jlbChaveProblema))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfTituloProblema, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfCodigoChave, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfNomeChave)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jcbData)
                    .addComponent(jcbStatusChamado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfNumChamado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCodigoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdcData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbChaveProblema)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfTituloProblema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCodigoChave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfNomeChave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jbtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jcbStatus, jtfCodigoChave, jtfCodigoFuncionario, jtfNomeChave, jtfNomeFuncionario, jtfNumChamado, jtfTituloProblema});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovimentacaoTelaChamado().setVisible(true);
            }
        });
    }

    public void centralizar(JDesktopPane dp) {
        Dimension ds = dp.getSize();
        Dimension dw = this.getSize();
        this.setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }
    
    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed

        MovimentacaoChamadoAbertura A = new MovimentacaoChamadoAbertura();
        A.setVisible(true);
        JDesktopPane JDP = this.getDesktopPane();
        JDP.add(A);
        A.centralizar(JDP);
        try{
            A.setSelected(true);
        }catch (Exception E){
            JOptionPane.showMessageDialog(null, "Erro: " + E);
        }
        A.setVisible(true);

    }//GEN-LAST:event_jbtNovoActionPerformed

    private void jbtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPesquisarActionPerformed

        LimparTabela();
        
        String SQL;
        
        SQL = "select tc.codigo, to_char(tc.data,'DD/MM/YYYY') as data, (tp.nome) as funcionario, (tcs.nome) as status, tc.titulo_problema, tc.codigo_chave ";
        SQL = SQL + "from t_chamado tc ";
        SQL = SQL + "inner join t_pessoa tp on tp.codigo = tc.codigo_funcionario ";
        SQL = SQL + "inner join t_chamado_status tcs on tcs.codigo = tc.status ";
        SQL = SQL + "where tc.exclusao = 0 ";
        
        if (!(jtfNumChamado.getText().equals(""))){
            SQL = SQL + "and tc.codigo = '" + jtfNumChamado.getText() + "' ";
        }
        
        String myDate = null;
                
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");  
        myDate = sdf.format(jdcData.getDate());   
        System.out.println(myDate);
        
        if (jcbData.isSelected()) {
            SQL = SQL + "and tc.data = '" + myDate + "' ";
        }
        
        if (!(jtfCodigoFuncionario.getText().equals(""))) {
            SQL = SQL + "and tc.codigo_funcionario = " + jtfCodigoFuncionario.getText() + " ";
        }
        
        if (jcbStatusChamado.isSelected()) {
            SQL = SQL + "and tc.status = " + ((Combo)jcbStatus.getSelectedItem()).getKey() + " ";
        }
        
        if (!(jtfTituloProblema.getText().equals(""))) {
            SQL = SQL + "and tc.titulo_problema like '% " + jtfTituloProblema.getText() + "%'";
        }
        
        if (!(jtfCodigoChave.getText().equals(""))) {
            SQL = SQL + "and codigo_chave = " + jtfCodigoChave.getText() + " ";
        }
                
        Conexao = new ConexaoPostgresql();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();
        
        try{
            while (RS.next()){
                DefaultTableModel Tabela = (DefaultTableModel) jTable1.getModel();
                Object[] CarLinha = {RS.getString("codigo"),RS.getString("data"),RS.getString("funcionario"),RS.getString("titulo_problema"),RS.getString("status"),};
                Tabela.addRow(CarLinha);
//                jTable1.getColumnModel().getColumn(4).setCellRenderer(cellRenderer);
            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
      
        Conexao.Desconectar(); 

    }//GEN-LAST:event_jbtPesquisarActionPerformed

    private void jbtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtFinalizarActionPerformed
        
        MovimentacaoFInalizarChamado A = new MovimentacaoFInalizarChamado();
        A.setVisible(true);
        JDesktopPane JDP = this.getDesktopPane();
        JDP.add(A);
        A.centralizar(JDP);
        try{
            A.setSelected(true);
        }catch (Exception E){
            JOptionPane.showMessageDialog(null, "Erro: " + E);
        }
        A.setVisible(true);
        A.NumeroChamado(Codigo);
        
    }//GEN-LAST:event_jbtFinalizarActionPerformed

    private void jbtNovo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovo2ActionPerformed
        
        MovimentacaoChamadoAndamento A = new MovimentacaoChamadoAndamento();
        A.setVisible(true);
        JDesktopPane JDP = this.getDesktopPane();
        JDP.add(A);
        A.centralizar(JDP);
        try{
            A.setSelected(true);            
        }catch (Exception E){
            JOptionPane.showMessageDialog(null, "Erro: " + E);
        }
        A.setVisible(true);
        A.NumeroChamado(Codigo);
        
    }//GEN-LAST:event_jbtNovo2ActionPerformed

    private void jbtRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRefreshActionPerformed
        
        Limpar();
        
        LimparTabela();
        
        LimparTabelaAndamento();
        
        Chamado();
        
        jcbData.setSelected(false);
        jcbStatusChamado.setSelected(false);
        
        jbtNovo2.setEnabled(true);
        jbtFinalizar.setEnabled(true);
        
        Codigo = null;
        
    }//GEN-LAST:event_jbtRefreshActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        jtpDetalheProblema.setText("");
        
        jtaAndamento.setText("");
        
        jdcDataFinal.setDate(new java.util.Date());
        jtpSolucaoChamado.setText("");
        
        Codigo = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
        
        CarregarDetalhesProblemas(String.valueOf(Codigo));
        
        LimparTabelaAndamento();
        
        CarregarAndamentoChamado(String.valueOf(Codigo));
        
        CarregarSolucaoChamado(String.valueOf(Codigo));
        
        ChamadoFinalizado(String.valueOf(Codigo));
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTableAndamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAndamentoMouseClicked
        
        jtaAndamento.setText("");
        
        jtaAndamento.setText("");
        
        jdcDataFinal.setDate(new java.util.Date());
        jtpSolucaoChamado.setText("");
        
        CodigoAndamento = jTableAndamento.getValueAt(jTableAndamento.getSelectedRow(), 0).toString();
        
        CarregarDetalhesAndamento(String.valueOf(CodigoAndamento));
        
    }//GEN-LAST:event_jTableAndamentoMouseClicked

    private void jtfCodigoFuncionarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoFuncionarioKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           
            jtfNomeFuncionario.setText(NomeFuncionario(Integer.parseInt(jtfCodigoFuncionario.getText())));
            
            jtfTituloProblema.requestFocus();

        }
        
        if(evt.getKeyCode() == KeyEvent.VK_F12){
        
            SubPesquisaAberturaChamado A = new SubPesquisaAberturaChamado();
            A.setVisible(true);
            JDesktopPane JDP = this.getDesktopPane();
            JDP.add(A);
            A.centralizar(JDP);
            try{
                A.setSelected(true);
                A.SetSubFuncionario(this);
                A.Validador("Chamado");
            }catch (Exception E){
                JOptionPane.showMessageDialog(null, "Erro: " + E);
            }
            A.setVisible(true);
            
        }
        
    }//GEN-LAST:event_jtfCodigoFuncionarioKeyPressed

    private void jtfCodigoFuncionarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoFuncionarioFocusLost
        
        if (!(jtfCodigoFuncionario.getText().trim().equals(""))) {
        
            jtfNomeFuncionario.setText(NomeFuncionario(Integer.parseInt(jtfCodigoFuncionario.getText())));
            
            jtfTituloProblema.requestFocus();
        
        }
        
    }//GEN-LAST:event_jtfCodigoFuncionarioFocusLost

    public String NomeFuncionario (int CodigoFuncionario){
        
        String Funcionario = null;
        
        Fun = new Funcoes();
        Funcionario = Fun.NomePessoa(CodigoFuncionario);
        
        return Funcionario;
        
    }
    
    public void NomeFuncionarioViaF12 (int CodigoFuncionario){
        
        jtfCodigoFuncionario.setText(String.valueOf(CodigoFuncionario));
        jtfNomeFuncionario.setText(NomeFuncionario(CodigoFuncionario));
        
    }
    
    private void Chamado(){
        
        String SQL;
        
        SQL = "select tc.codigo, to_char(tc.data,'DD/MM/YYYY') as data, (tp.nome) as funcionario, (tcs.nome) as status, tc.titulo_problema, tc.codigo_chave ";
        SQL = SQL + "from t_chamado tc ";
        SQL = SQL + "inner join t_pessoa tp on tp.codigo = tc.codigo_funcionario ";
        SQL = SQL + "inner join t_chamado_status tcs on tcs.codigo = tc.status ";
        SQL = SQL + "where tc.exclusao = 0 ";
        SQL = SQL + "order by status, codigo ";
                
        Conexao = new ConexaoPostgresql();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();
        
        try{
            while (RS.next()){
                DefaultTableModel Tabela = (DefaultTableModel) jTable1.getModel();
                Object[] CarLinha = {RS.getString("codigo"),RS.getString("data"),RS.getString("funcionario"),RS.getString("titulo_problema"),RS.getString("status")};
                Tabela.addRow(CarLinha);
            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
      
        Conexao.Desconectar();        
        
    }
    
    private void Limpar(){
        
        jtfNumChamado.setText("");
        jdcData.setDate(new java.util.Date());
        jtfCodigoFuncionario.setText("");
        jtfNomeFuncionario.setText("");        
        ComboStatusChamado();        
        jtfTituloProblema.setText("");
        jtfCodigoChave.setText("");
        jtfNomeChave.setText("");
        
        jtpDetalheProblema.setText("");
        
        jtaAndamento.setText("");
        
        jdcDataFinal.setDate(new java.util.Date());
        jtpSolucaoChamado.setText("");
        
    }
    
    private void ComboStatusChamado(){

        jcbStatus.removeAllItems();
        try {
            Conexao = new ConexaoPostgresql();
            Conexao.Conectar();
            Conexao.setSQL("select codigo, nome from t_chamado_status where exclusao = 0 order by nome");
            ResultSet RS = Conexao.Consultar();
            DefaultComboBoxModel Modelo = new DefaultComboBoxModel();
            while(RS.next()){
                Combo cboF = new Combo(Integer.parseInt(RS.getString("codigo")),RS.getString("nome"));
                Modelo.addElement(cboF);
            }
            jcbStatus.setModel(Modelo);
        } catch(Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro: " + Erro);
        }

    }
    
    private void LimparTabela () {
        
        DefaultTableModel tableModel =(DefaultTableModel) jTable1.getModel();  
        tableModel.setNumRows(0);
        
    }
    
    private void LimparTabelaAndamento () {
        
        DefaultTableModel tableModel =(DefaultTableModel) jTableAndamento.getModel();  
        tableModel.setNumRows(0);
        
    }
    
    public void CarregarDetalhesProblemas(String Codigo) {
        
        String SQL;
        
        SQL = "select tcha.descricao_problema ";
        SQL = SQL + "from t_chamado tcha ";
        SQL = SQL + "where tcha.codigo = " + Codigo + " ";
        SQL = SQL + "and tcha.exclusao = 0 ";
        
        Conexao = new ConexaoPostgresql();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();
        
        try{
            
            if (RS.next()) {
                
                jtpDetalheProblema.setText(RS.getString("descricao_problema"));
                
            }        
           
        } catch (Exception Erro) {
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
        
        Conexao.Desconectar();      
        
    }
    
    private void CarregarAndamentoChamado(String Codigo){
        
        String SQL;
        
        SQL = "select tcha.codigo, to_char(tcha.data,'DD/MM/YYYY') as data, tcha.titulo ";
        SQL = SQL + "from t_chamado_item tcha ";
        SQL = SQL + "where tcha.codigo_chamado = " + Codigo + " ";
        SQL = SQL + "and tcha.exclusao = 0 ";
        
        Conexao = new ConexaoPostgresql();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();
        
        try{
            
            while (RS.next()){
                DefaultTableModel Tabela = (DefaultTableModel) jTableAndamento.getModel();
                Object[] CarLinha = {RS.getString("codigo"),RS.getString("data"),RS.getString("titulo")};
                Tabela.addRow(CarLinha);
            }            
           
        } catch (Exception Erro) {
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
        
        Conexao.Desconectar();  
        
    }    
    
    public void CarregarDetalhesAndamento(String Codigo) {
        
        jtaAndamento.setText("");
        
        jdcDataFinal.setDate(new java.util.Date());
        jtpSolucaoChamado.setText("");
        
        String SQL;
        
        SQL = "select tcha.andamento ";
        SQL = SQL + "from t_chamado_item tcha ";
        SQL = SQL + "where tcha.codigo = " + Codigo + " ";
        SQL = SQL + "and tcha.exclusao = 0 ";
        
        Conexao = new ConexaoPostgresql();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();
        
        try{
            
            if (RS.next()) {
                
                jtaAndamento.setText(RS.getString("andamento"));
                
            }        
           
        } catch (Exception Erro) {
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
        
        Conexao.Desconectar();      
        
    }

    private void CarregarSolucaoChamado(String Codigo){
        
        String SQL;
        
        SQL = "select tcha.datafinal, tcha.solucao ";
        SQL = SQL + "from t_chamado_final tcha ";
        SQL = SQL + "where tcha.codigo_chamado = " + Codigo + " ";
        SQL = SQL + "and tcha.exclusao = 0 ";
        
        Conexao = new ConexaoPostgresql();
        Conexao.Conectar();
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();
        
        try{
            
            if (RS.next()) {
              
                jdcDataFinal.setDate(RS.getDate("datafinal"));
                jtpSolucaoChamado.setText(RS.getString("solucao"));
                
            }             
           
        } catch (Exception Erro) {
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
        
        Conexao.Desconectar();  
        
    } 
    
    private void ChamadoFinalizado(String Codigo){
        
        String SQL;

        SQL = "select status from t_chamado where codigo = " + Codigo + " and exclusao = 0";
        
        Conexao = new ConexaoPostgresql();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();

        try{
            if (RS.next()){
                
                if (RS.getString("status").equals("1")) {
                    jbtNovo2.setEnabled(true);
                    jbtFinalizar.setEnabled(true);
                } else {
                    jbtNovo2.setEnabled(false);
                    jbtFinalizar.setEnabled(false);
                }
                
            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }

        Conexao.Desconectar();
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableAndamento;
    private javax.swing.JButton jbtFinalizar;
    private javax.swing.JButton jbtNovo;
    private javax.swing.JButton jbtNovo2;
    private javax.swing.JButton jbtPesquisar;
    private javax.swing.JButton jbtRefresh;
    private javax.swing.JCheckBox jcbData;
    private javax.swing.JComboBox<String> jcbStatus;
    private javax.swing.JCheckBox jcbStatusChamado;
    private com.toedter.calendar.JDateChooser jdcData;
    private com.toedter.calendar.JDateChooser jdcDataFinal;
    private javax.swing.JLabel jlbChaveProblema;
    private javax.swing.JTextArea jtaAndamento;
    private javax.swing.JFormattedTextField jtfCodigoChave;
    private javax.swing.JFormattedTextField jtfCodigoFuncionario;
    private javax.swing.JFormattedTextField jtfNomeChave;
    private javax.swing.JFormattedTextField jtfNomeFuncionario;
    private javax.swing.JFormattedTextField jtfNumChamado;
    private javax.swing.JFormattedTextField jtfTituloProblema;
    private javax.swing.JTextPane jtpDetalheProblema;
    private javax.swing.JTextPane jtpSolucaoChamado;
    // End of variables declaration//GEN-END:variables
}
