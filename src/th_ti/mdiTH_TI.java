/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * mdiBrain.java
 *
 */

package th_ti;

import classes.ConexaoPostgresql;
import Telas.CadastroAgenda;
import Telas.CadastroChave;
import Telas.CadastroPais;
import Telas.CadastroProduto;
import Telas.CadastroUnidade;
import Telas.CadastroCidade;
import Telas.CadastroEstado;
import Telas.CadastroChave;
import Telas.RelatorioAgenda;
import Telas.RelatorioProduto;
import Telas.CadastroSerieMotorola;
import Telas.ConsultaEntrada;
import Telas.ConsultaProdutos;
import Telas.ConsultaSaida;
import Telas.ConsultaSerie;
import Telas.ConsultaViagem;
import Telas.MovimentacaoEntrada;
import Telas.MovimentacaoSaida;
import Telas.MovimentacaoViagem;
import Telas.MovimentacaoTelaChamado;
import Telas.RelatorioEntrada;
import Telas.RelatorioSaida;
import Telas.RelatorioViagem;

/**
 *    This file is part of Foobar.
 *
 *   Foobar is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   Foobar is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
 *
 *   Este arquivo é parte do programa Foobar
 *
 *   Foobar é um software livre; você pode redistribuí-lo e/ou 
 *   modificá-lo dentro dos termos da Licença Pública Geral GNU como 
 *   publicada pela Fundação do Software Livre (FSF); na versão 3 da 
 *   Licença, ou (na sua opinião) qualquer versão.
 *
 *   Este programa é distribuído na esperança de que possa ser  útil, 
 *   mas SEM NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO
 *   a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a
 *   Licença Pública Geral GNU para maiores detalhes.
 *
 *   Você deve ter recebido uma cópia da Licença Pública Geral GNU junto
 *   com este programa, Se não, veja <http://www.gnu.org/licenses/>.
 *
 * 
 * @author Jeferson Slywitch - jeferson.slywitch@gmail.com
 */
public class mdiTH_TI extends javax.swing.JFrame {

    private ConexaoPostgresql Conexao;
    

    public void setConexao(ConexaoPostgresql Conexao) {
        this.Conexao = Conexao;
    }

    /** Creates new form mdiBrain */
    public mdiTH_TI() {
//        try {            
//            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());  // Windows
//            SwingUtilities.updateComponentTreeUI(this);

//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("com.sun.java.swing.plaf.windows.windowsLookAndFeel".equals(info.getClassName())) {   
//                   javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                   break;
//                 } 
//            }  
            
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("com.sun.java.swing.plaf.gtk.GTKLookAndFeel".equals(info.getClassName())) {   
//                   javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                   break;
//                 } 
//            }     
            
//        } catch (Exception e){            
//            e.printStackTrace();            
//        }

        initComponents();

        jmiCadSerieMotorola.setVisible(false);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdpBrain = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        mnuArquivo = new javax.swing.JMenu();
        jmnFederações = new javax.swing.JMenu();
        jmiPais = new javax.swing.JMenuItem();
        jmiEstado = new javax.swing.JMenuItem();
        jmiCidade = new javax.swing.JMenuItem();
        jmnTipo = new javax.swing.JMenu();
        jmiUnidade = new javax.swing.JMenuItem();
        mniAgenda = new javax.swing.JMenuItem();
        jmiProduto = new javax.swing.JMenuItem();
        jmiCadSerieMotorola = new javax.swing.JMenuItem();
        jmIPalavraChave = new javax.swing.JMenuItem();
        jmnMovimentacao = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jmiMovimentacaoViagem = new javax.swing.JMenuItem();
        jmiMovimentacaoChamado = new javax.swing.JMenuItem();
        jmnConsultas = new javax.swing.JMenu();
        jmnConsArquivo = new javax.swing.JMenu();
        jmiConsultaProdutos = new javax.swing.JMenuItem();
        jmiSerie = new javax.swing.JMenuItem();
        jmnConsultaMovimentacao = new javax.swing.JMenu();
        jmiConsultaEntrada = new javax.swing.JMenuItem();
        jmiConsultaSaida = new javax.swing.JMenuItem();
        jmiConsultaViagem = new javax.swing.JMenuItem();
        jmnRelatorio = new javax.swing.JMenu();
        jmnRelArquivo = new javax.swing.JMenu();
        jmiRelAgenda = new javax.swing.JMenuItem();
        jmiRelProduto = new javax.swing.JMenuItem();
        jmnRelMovimentacao = new javax.swing.JMenu();
        jmiRelEntrada = new javax.swing.JMenuItem();
        jmiRelSaida = new javax.swing.JMenuItem();
        jmiRelViagem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SimpleCRM 0.1.1 - UNSTABLE");

        jdpBrain.setBackground(new java.awt.Color(204, 204, 204));
        jdpBrain.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jdpBrain.setForeground(new java.awt.Color(204, 204, 204));

        mnuArquivo.setText("Arquivo");

        jmnFederações.setText("Federações");

        jmiPais.setText("País");
        jmiPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPaisActionPerformed(evt);
            }
        });
        jmnFederações.add(jmiPais);

        jmiEstado.setText("Estado");
        jmiEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEstadoActionPerformed(evt);
            }
        });
        jmnFederações.add(jmiEstado);

        jmiCidade.setText("Cidade");
        jmiCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCidadeActionPerformed(evt);
            }
        });
        jmnFederações.add(jmiCidade);

        mnuArquivo.add(jmnFederações);

        jmnTipo.setText("Tipo");

        jmiUnidade.setText("Unidade");
        jmiUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiUnidadeActionPerformed(evt);
            }
        });
        jmnTipo.add(jmiUnidade);

        mnuArquivo.add(jmnTipo);

        mniAgenda.setText("Agenda");
        mniAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAgendaActionPerformed(evt);
            }
        });
        mnuArquivo.add(mniAgenda);

        jmiProduto.setText("Produto");
        jmiProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiProdutoActionPerformed(evt);
            }
        });
        mnuArquivo.add(jmiProduto);

        jmiCadSerieMotorola.setText("Séries Motorola");
        jmiCadSerieMotorola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadSerieMotorolaActionPerformed(evt);
            }
        });
        mnuArquivo.add(jmiCadSerieMotorola);

        jmIPalavraChave.setText("Palavra Chave");
        jmIPalavraChave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmIPalavraChaveActionPerformed(evt);
            }
        });
        mnuArquivo.add(jmIPalavraChave);

        menuBar.add(mnuArquivo);

        jmnMovimentacao.setText("Movimentação");

        jMenuItem1.setText("Entrada");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jmnMovimentacao.add(jMenuItem1);

        jMenuItem2.setText("Saída");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jmnMovimentacao.add(jMenuItem2);

        jmiMovimentacaoViagem.setText("Viagem");
        jmiMovimentacaoViagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMovimentacaoViagemActionPerformed(evt);
            }
        });
        jmnMovimentacao.add(jmiMovimentacaoViagem);

        jmiMovimentacaoChamado.setText("Chamado");
        jmiMovimentacaoChamado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMovimentacaoChamadoActionPerformed(evt);
            }
        });
        jmnMovimentacao.add(jmiMovimentacaoChamado);

        menuBar.add(jmnMovimentacao);

        jmnConsultas.setText("Consultas");

        jmnConsArquivo.setText("Arquivo");

        jmiConsultaProdutos.setText("Produtos");
        jmiConsultaProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConsultaProdutosActionPerformed(evt);
            }
        });
        jmnConsArquivo.add(jmiConsultaProdutos);

        jmiSerie.setText("Séries Motorola");
        jmiSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSerieActionPerformed(evt);
            }
        });
        jmnConsArquivo.add(jmiSerie);

        jmnConsultas.add(jmnConsArquivo);

        jmnConsultaMovimentacao.setText("Movimentação");

        jmiConsultaEntrada.setText("Entrada");
        jmiConsultaEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConsultaEntradaActionPerformed(evt);
            }
        });
        jmnConsultaMovimentacao.add(jmiConsultaEntrada);

        jmiConsultaSaida.setText("Saída");
        jmiConsultaSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConsultaSaidaActionPerformed(evt);
            }
        });
        jmnConsultaMovimentacao.add(jmiConsultaSaida);

        jmiConsultaViagem.setText("Viagem");
        jmiConsultaViagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConsultaViagemActionPerformed(evt);
            }
        });
        jmnConsultaMovimentacao.add(jmiConsultaViagem);

        jmnConsultas.add(jmnConsultaMovimentacao);

        menuBar.add(jmnConsultas);

        jmnRelatorio.setText("Relatórios");

        jmnRelArquivo.setText("Arquivo");

        jmiRelAgenda.setText("Agenda");
        jmiRelAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRelAgendaActionPerformed(evt);
            }
        });
        jmnRelArquivo.add(jmiRelAgenda);

        jmiRelProduto.setText("Produto");
        jmiRelProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRelProdutoActionPerformed(evt);
            }
        });
        jmnRelArquivo.add(jmiRelProduto);

        jmnRelatorio.add(jmnRelArquivo);

        jmnRelMovimentacao.setText("Movimentação");

        jmiRelEntrada.setText("Entrada");
        jmiRelEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRelEntradaActionPerformed(evt);
            }
        });
        jmnRelMovimentacao.add(jmiRelEntrada);

        jmiRelSaida.setText("Saída");
        jmiRelSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRelSaidaActionPerformed(evt);
            }
        });
        jmnRelMovimentacao.add(jmiRelSaida);

        jmiRelViagem.setText("Viagem");
        jmiRelViagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRelViagemActionPerformed(evt);
            }
        });
        jmnRelMovimentacao.add(jmiRelViagem);

        jmnRelatorio.add(jmnRelMovimentacao);

        menuBar.add(jmnRelatorio);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jdpBrain, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jdpBrain, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAgendaActionPerformed
        CadastroAgenda Agn = new CadastroAgenda();
        jdpBrain.add(Agn);
        Agn.centralizar(jdpBrain);
        Agn.setVisible(true);
    }//GEN-LAST:event_mniAgendaActionPerformed

    private void jmiCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCidadeActionPerformed
        CadastroCidade Cid = new CadastroCidade();
        jdpBrain.add(Cid);
        Cid.centralizar(jdpBrain);
        Cid.setVisible(true);
    }//GEN-LAST:event_jmiCidadeActionPerformed

    private void jmiEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEstadoActionPerformed
        CadastroEstado Est = new CadastroEstado();
        jdpBrain.add(Est);
        Est.centralizar(jdpBrain);
        Est.setVisible(true);
    }//GEN-LAST:event_jmiEstadoActionPerformed

    private void jmiPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPaisActionPerformed
        CadastroPais Pa = new CadastroPais();
        jdpBrain.add(Pa);
        Pa.centralizar(jdpBrain);
        Pa.setVisible(true);
    }//GEN-LAST:event_jmiPaisActionPerformed

    private void jmiProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiProdutoActionPerformed
        CadastroProduto Cp = new CadastroProduto();
        jdpBrain.add(Cp);
        Cp.centralizar(jdpBrain);
        Cp.setVisible(true);
    }//GEN-LAST:event_jmiProdutoActionPerformed

    private void jmiRelAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRelAgendaActionPerformed
        RelatorioAgenda RA = new RelatorioAgenda();
        jdpBrain.add(RA);
        RA.centralizar(jdpBrain);
        RA.setVisible(true);
    }//GEN-LAST:event_jmiRelAgendaActionPerformed

    private void jmiRelProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRelProdutoActionPerformed
        RelatorioProduto RP = new RelatorioProduto();
        jdpBrain.add(RP);
        RP.centralizar(jdpBrain);
        RP.setVisible(true);
    }//GEN-LAST:event_jmiRelProdutoActionPerformed

    private void jmiUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiUnidadeActionPerformed
        CadastroUnidade Cu = new CadastroUnidade();
        jdpBrain.add(Cu);
        Cu.centralizar(jdpBrain);
        Cu.setVisible(true);
    }//GEN-LAST:event_jmiUnidadeActionPerformed

    private void jmiCadSerieMotorolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadSerieMotorolaActionPerformed
        CadastroSerieMotorola CSM = new CadastroSerieMotorola();
        jdpBrain.add(CSM);
        CSM.centralizar(jdpBrain);
        CSM.setVisible(true);
    }//GEN-LAST:event_jmiCadSerieMotorolaActionPerformed

    private void jmiSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSerieActionPerformed
        ConsultaSerie CSM = new ConsultaSerie();
        jdpBrain.add(CSM);
        CSM.centralizar(jdpBrain);
        CSM.setVisible(true);
    }//GEN-LAST:event_jmiSerieActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        MovimentacaoEntrada ME = new MovimentacaoEntrada();
        jdpBrain.add(ME);
        ME.centralizar(jdpBrain);
        ME.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        MovimentacaoSaida MS = new MovimentacaoSaida();
        jdpBrain.add(MS);
        MS.centralizar(jdpBrain);
        MS.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jmiMovimentacaoViagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMovimentacaoViagemActionPerformed
        MovimentacaoViagem MV = new MovimentacaoViagem();
        jdpBrain.add(MV);
        MV.centralizar(jdpBrain);
        MV.setVisible(true);
    }//GEN-LAST:event_jmiMovimentacaoViagemActionPerformed

    private void jmiConsultaProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConsultaProdutosActionPerformed
        ConsultaProdutos ConsP = new ConsultaProdutos();
        jdpBrain.add(ConsP);
        ConsP.centralizar(jdpBrain);
        ConsP.setVisible(true);
    }//GEN-LAST:event_jmiConsultaProdutosActionPerformed

    private void jmiConsultaEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConsultaEntradaActionPerformed
        ConsultaEntrada ConsE = new ConsultaEntrada();
        jdpBrain.add(ConsE);
        ConsE.centralizar(jdpBrain);
        ConsE.setVisible(true);
    }//GEN-LAST:event_jmiConsultaEntradaActionPerformed

    private void jmiConsultaSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConsultaSaidaActionPerformed
        ConsultaSaida ConsS = new ConsultaSaida();
        jdpBrain.add(ConsS);
        ConsS.centralizar(jdpBrain);
        ConsS.setVisible(true);
    }//GEN-LAST:event_jmiConsultaSaidaActionPerformed

    private void jmiConsultaViagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConsultaViagemActionPerformed
        ConsultaViagem ConsV = new ConsultaViagem();
        jdpBrain.add(ConsV);
        ConsV.centralizar(jdpBrain);
        ConsV.setVisible(true);
    }//GEN-LAST:event_jmiConsultaViagemActionPerformed

    private void jmiRelSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRelSaidaActionPerformed
        RelatorioSaida RelS = new RelatorioSaida();
        jdpBrain.add(RelS);
        RelS.centralizar(jdpBrain);
        RelS.setVisible(true);
    }//GEN-LAST:event_jmiRelSaidaActionPerformed

    private void jmiRelViagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRelViagemActionPerformed
        RelatorioViagem RelV = new RelatorioViagem();
        jdpBrain.add(RelV);
        RelV.centralizar(jdpBrain);
        RelV.setVisible(true);
    }//GEN-LAST:event_jmiRelViagemActionPerformed

    private void jmiRelEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRelEntradaActionPerformed
        RelatorioEntrada RelE = new RelatorioEntrada();
        jdpBrain.add(RelE);
        RelE.centralizar(jdpBrain);
        RelE.setVisible(true);
    }//GEN-LAST:event_jmiRelEntradaActionPerformed

    private void jmiMovimentacaoChamadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMovimentacaoChamadoActionPerformed
        MovimentacaoTelaChamado TC = new MovimentacaoTelaChamado();
        jdpBrain.add(TC);
        TC.centralizar(jdpBrain);
        TC.setVisible(true);
    }//GEN-LAST:event_jmiMovimentacaoChamadoActionPerformed

    private void jmIPalavraChaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmIPalavraChaveActionPerformed
        CadastroChave CC = new CadastroChave();
        jdpBrain.add(CC);
        CC.centralizar(jdpBrain);
        CC.setVisible(true);
    }//GEN-LAST:event_jmIPalavraChaveActionPerformed
    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mdiTH_TI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JDesktopPane jdpBrain;
    private javax.swing.JMenuItem jmIPalavraChave;
    private javax.swing.JMenuItem jmiCadSerieMotorola;
    private javax.swing.JMenuItem jmiCidade;
    private javax.swing.JMenuItem jmiConsultaEntrada;
    private javax.swing.JMenuItem jmiConsultaProdutos;
    private javax.swing.JMenuItem jmiConsultaSaida;
    private javax.swing.JMenuItem jmiConsultaViagem;
    private javax.swing.JMenuItem jmiEstado;
    private javax.swing.JMenuItem jmiMovimentacaoChamado;
    private javax.swing.JMenuItem jmiMovimentacaoViagem;
    private javax.swing.JMenuItem jmiPais;
    private javax.swing.JMenuItem jmiProduto;
    private javax.swing.JMenuItem jmiRelAgenda;
    private javax.swing.JMenuItem jmiRelEntrada;
    private javax.swing.JMenuItem jmiRelProduto;
    private javax.swing.JMenuItem jmiRelSaida;
    private javax.swing.JMenuItem jmiRelViagem;
    private javax.swing.JMenuItem jmiSerie;
    private javax.swing.JMenuItem jmiUnidade;
    private javax.swing.JMenu jmnConsArquivo;
    private javax.swing.JMenu jmnConsultaMovimentacao;
    private javax.swing.JMenu jmnConsultas;
    private javax.swing.JMenu jmnFederações;
    private javax.swing.JMenu jmnMovimentacao;
    private javax.swing.JMenu jmnRelArquivo;
    private javax.swing.JMenu jmnRelMovimentacao;
    private javax.swing.JMenu jmnRelatorio;
    private javax.swing.JMenu jmnTipo;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem mniAgenda;
    private javax.swing.JMenu mnuArquivo;
    // End of variables declaration//GEN-END:variables

}
